import{_ as p,P as o,a2 as c,V as t,a8 as s,U as n,a3 as e,B as l}from"./framework-89b9b91d.js";const i={},d=s(`<h1 id="_02-语言元素" tabindex="-1"><a class="header-anchor" href="#_02-语言元素" aria-hidden="true">#</a> 02.语言元素</h1><h2 id="变量和类型" tabindex="-1"><a class="header-anchor" href="#变量和类型" aria-hidden="true">#</a> 变量和类型</h2><p>常用的数据类型：</p><ul><li>整型 Python 2.x 中有 <code>int</code> 和 <code>long</code>，Python 3.x 中只有 <code>int</code>。 支持二进制（<code>0b100</code>，十进制 4），八进制（<code>0o100</code>，十进制 64），十六进制（<code>0x100</code>，十进制 256）</li><li>浮点型 浮点数除了支持数学写法，如 <code>123.456</code>，还支持科学计数法，如 <code>1.23456e2</code></li><li>字符串型 以单引号或双引号括起来的任意文本，比如 <code>&#39;hello&#39;</code> 或 <code>&quot;hello&quot;</code></li><li>布尔型 布尔值只有 <code>True</code> 和 <code>False</code>，注意大小写。</li><li>复数型 形如 <code>3+5j</code>，跟数学上的复数一样，只不过是虚部的 <code>i</code> 换成了 <code>j</code>。</li></ul><h2 id="变量命名" tabindex="-1"><a class="header-anchor" href="#变量命名" aria-hidden="true">#</a> 变量命名</h2><ul><li>硬性规则 <ul><li>变量由字母，数字和下划线构成，数字不能开头。</li><li>大小写敏感</li><li>不要跟关键字，保留字冲突</li></ul></li><li>PEP 8 要求 <ul><li>小写字母拼写，下划线连接</li><li>受保护的实例属性用单个下划线开头</li><li>私有的实例属性用两个下划线开头</li></ul></li></ul><h2 id="变量的使用" tabindex="-1"><a class="header-anchor" href="#变量的使用" aria-hidden="true">#</a> 变量的使用</h2><p>在 Python 中可以使用 <code>type</code> 函数对变量的类型进行检查。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">100</span>
b <span class="token operator">=</span> <span class="token number">12.345</span>
c <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">5j</span>
d <span class="token operator">=</span> <span class="token string">&#39;hello, world&#39;</span>
e <span class="token operator">=</span> <span class="token boolean">True</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;int&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;float&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;complex&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;str&#39;&gt;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &lt;class &#39;bool&#39;&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>试一试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python day-01-15/day-02/var-type.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),r=s(`<p>可以使用 Python 中的内置函数对变量类型进行变换。</p><ul><li><code>int()</code> 将一个数值或字符串转换成正数，可以指定进制。</li><li><code>float()</code> 将一个字符串转换成浮点数。</li><li><code>str()</code> 将指定的对象转换成字符串形式，可以指定编码。</li><li><code>chr()</code> 将整数转换成该编码对应的字符串（一个字符）。</li><li><code>ord()</code> 将字符串（一个字符）转换成对应的编码（整数）</li></ul><p>下面的代码通过键盘输入两个整数来实现对两个整数的算术运算。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;a = &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;b = &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%d + %d = %d&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%d - %d = %d&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%d * %d = %d&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">*</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%d / %d = %f&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">/</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%d // %d = %d&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">//</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%d %% %d = %d&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">%</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%d ** %d = %f&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">**</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>试一试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python day-01-15/day-02/calc.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),u=s('<h2 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符" aria-hidden="true">#</a> 运算符</h2><p>Python 支持多种运算符，下表大致按照优先级从高到低的顺序列出了所有的运算符。</p><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td><code>[]</code> <code>[:]</code></td><td>下标，切片</td></tr><tr><td><code>**</code></td><td>指数</td></tr><tr><td><code>~</code> <code>+</code> <code>-</code></td><td>按位取反，正负号</td></tr><tr><td><code>*</code> <code>/</code> <code>%</code> <code>//</code></td><td>乘，除，摸，整除</td></tr><tr><td><code>+</code> <code>-</code></td><td>加，减</td></tr><tr><td><code>&gt;&gt;</code> <code>&lt;&lt;</code></td><td>右移，左移</td></tr><tr><td><code>&amp;</code></td><td>按位与</td></tr><tr><td><code>^</code> <code>|</code></td><td>按位异或，按位或</td></tr><tr><td><code>&lt;=</code> <code>&lt;</code> <code>&gt;</code> <code>&gt;=</code></td><td>小于等于，小于，大于，大于等于</td></tr><tr><td><code>==</code> <code>!=</code></td><td>等于，不等于</td></tr><tr><td><code>is</code> <code>is not</code></td><td>身份运算符</td></tr><tr><td><code>in</code> <code>not in</code></td><td>成员运算符</td></tr><tr><td><code>not</code> <code>or</code> <code>and</code></td><td>逻辑运算符</td></tr><tr><td><code>+=</code> <code>-=</code> 等</td><td><code>a +=b</code> 等价于 <code>a = a + b</code></td></tr></tbody></table><h2 id="练习" tabindex="-1"><a class="header-anchor" href="#练习" aria-hidden="true">#</a> 练习</h2><h3 id="华氏温度转换为摄氏温度" tabindex="-1"><a class="header-anchor" href="#华氏温度转换为摄氏温度" aria-hidden="true">#</a> 华氏温度转换为摄氏温度</h3>',5),k=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"提示"),n("p",null,[e("华氏温度到摄氏温度的转换公式为："),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"C"),n("mo",null,"="),n("mo",{stretchy:"false"},"("),n("mi",null,"F"),n("mo",null,"−"),n("mn",null,"32"),n("mo",{stretchy:"false"},")"),n("mo",null,"÷"),n("mn",null,"1.8")]),n("annotation",{encoding:"application/x-tex"},"C=(F - 32) \\div 1.8")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6833em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"−"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"32"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"÷"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1.8")])])]),e("。")])],-1),m=s(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&#39;&#39;&#39;
华氏温度转换为摄氏温度
&#39;&#39;&#39;</span>

f <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请输入华氏温度：&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> <span class="token punctuation">(</span>f <span class="token operator">-</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1.8</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;%.1f华氏度 = %.1f摄氏度&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>f<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在使用 <code>print</code> 函数输出时，也可以对字符串内容进行格式化处理。 上面的 <code>print</code> 函数中的字符串 <code>%.1f</code> 是一个占位符，稍后会由一个 <code>float</code> 变量替换它。 同理， <code>%s</code> 由字符串替换，<code>%d</code> 用整数变量替换。</p><p>除了这种格式化字符串的方式外，还可以用下面的方式来格式化字符串，其中 <code>{f:.1f}</code> 和 <code>{c:.1f}</code> 可以先看成 <code>{f}</code> 和 <code>{c}</code>，表示输出时会用变量 <code>f</code> 和 <code>c</code> 的值会替换掉这两个占位符，后面的 <code>%.1f</code> 表示这是一个浮点数，小数点后保留 1 位有效数字。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>f<span class="token punctuation">:</span><span class="token format-spec">.1f</span><span class="token punctuation">}</span></span><span class="token string">华氏度 = </span><span class="token interpolation"><span class="token punctuation">{</span>c<span class="token punctuation">:</span><span class="token format-spec">.1f</span><span class="token punctuation">}</span></span><span class="token string">摄氏度&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>试一试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python day-01-15/day-02/deg-converter.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),h=s(`<h3 id="输入年份判断是不是闰年" tabindex="-1"><a class="header-anchor" href="#输入年份判断是不是闰年" aria-hidden="true">#</a> 输入年份判断是不是闰年</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
输入年份判断是不是闰年
&quot;&quot;&quot;</span>

year <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入年份：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
is_leap <span class="token operator">=</span> year <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> year <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span> \\
          <span class="token keyword">or</span> year <span class="token operator">%</span> <span class="token number">400</span> <span class="token operator">==</span> <span class="token number">0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>is_leap<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>试一试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python day-01-15/day-02/is-leap.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4);function b(v,y){const a=l("Replit");return o(),c("div",null,[d,t(a,{link:"https://replit.com/@FuckDoctors/python-100-days#day-01-15/day-02/var-type.py"}),r,t(a,{link:"https://replit.com/@FuckDoctors/python-100-days#day-01-15/day-02/calc.py"}),u,k,m,t(a,{link:"https://replit.com/@FuckDoctors/python-100-days#day-01-15/day-02/deg-converter.py"}),h,t(a,{link:"https://replit.com/@FuckDoctors/python-100-days#day-01-15/day-02/is-leap.py"})])}const f=p(i,[["render",b],["__file","02.语言元素.html.vue"]]);export{f as default};
