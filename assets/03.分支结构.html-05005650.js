import{_ as r,r as o,o as t,c as e,a as s,d as p,e as c,b as n,h as a}from"./app-37efb2f8.js";const m={},u=a('<h1 id="_03-分支结构" tabindex="-1"><a class="header-anchor" href="#_03-分支结构" aria-hidden="true">#</a> 03.分支结构</h1><h2 id="if-分支" tabindex="-1"><a class="header-anchor" href="#if-分支" aria-hidden="true">#</a> <code>if</code> 分支</h2><p><code>if</code> 结构由 <code>if</code>, <code>elif</code> 和 <code>else</code> 关键字。</p><p>Python 中没有用括号来构造代码块，而是使用了<strong>缩进的方式表示代码块</strong>。 如果 <code>if</code> 条件成立时需要执行多条语句，只要多条语句保持相同的缩进即可。 缩进可以是任意数量的空格，但通常是 4 个空格。 如果要构造多个分支，可以使用 <code>if...elif...else...</code>。分支结构可以嵌套。</p><h3 id="分段函数求值" tabindex="-1"><a class="header-anchor" href="#分段函数求值" aria-hidden="true">#</a> 分段函数求值</h3>',5),d={class:"katex-block"},h={class:"katex-display"},k={class:"katex"},g=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f"),s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",{rowspacing:"0.36em",columnalign:"left left",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mn",null,"3"),s("mi",null,"x"),s("mo",null,"−"),s("mn",null,"5"),s("mo",{separator:"true"},","),s("mspace",{width:"1em"}),s("mi",null,"x"),s("mo",null,">"),s("mn",null,"1")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"x"),s("mo",{separator:"true"},","),s("mspace",{width:"1em"}),s("mo",null,"−"),s("mn",null,"1"),s("mo",null,"≤"),s("mi",null,"x"),s("mo",null,"≤"),s("mn",null,"1")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mn",null,"5"),s("mi",null,"x"),s("mo",null,"+"),s("mn",null,"3"),s("mo",{separator:"true"},","),s("mspace",{width:"1em"}),s("mi",null,"x"),s("mo",null,"<"),s("mo",null,"−"),s("mn",null,"1")])])])])])])]),s("annotation",{encoding:"application/x-tex"}," f(x)=\\begin{cases} 3x - 5,\\quad x > 1 \\\\ x,\\quad -1 \\leq x \\leq 1 \\\\ 5x + 3, \\quad x < -1 \\end{cases} ")])])],-1),v={class:"katex-html","aria-hidden":"true"},y=a('<span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1),_={class:"base"},b=s("span",{class:"strut",style:{height:"4.32em","vertical-align":"-1.91em"}},null,-1),f={class:"minner"},x={class:"mopen"},w={class:"delimsizing mult"},q={class:"vlist-t vlist-t2"},M={class:"vlist-r"},z={class:"vlist",style:{height:"2.35em"}},B=s("span",{style:{top:"-2.2em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎩")])],-1),H={style:{top:"-2.192em"}},E=s("span",{class:"pstrut",style:{height:"3.15em"}},null,-1),V={style:{height:"0.316em",width:"0.8889em"}},A={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"0.316em",style:{width:"0.8889em"},viewBox:"0 0 888.89 316",preserveAspectRatio:"xMinYMin"},C=s("path",{d:"M384 0 H504 V316 H384z M384 0 H504 V316 H384z"},null,-1),N=[C],R=s("span",{style:{top:"-3.15em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎨")])],-1),S={style:{top:"-4.292em"}},D=s("span",{class:"pstrut",style:{height:"3.15em"}},null,-1),F={style:{height:"0.316em",width:"0.8889em"}},L={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"0.316em",style:{width:"0.8889em"},viewBox:"0 0 888.89 316",preserveAspectRatio:"xMinYMin"},Y=s("path",{d:"M384 0 H504 V316 H384z M384 0 H504 V316 H384z"},null,-1),I=[Y],j=s("span",{style:{top:"-4.6em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎧")])],-1),P=s("span",{class:"vlist-s"},"​",-1),T=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.85em"}},[s("span")])],-1),G=a('<span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">5</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span>',2),J=a(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
分段函数求值

        3x - 5  (x &gt; 1)
f(x) =  x + 2   (-1 &lt;= x &lt;= 1)
        5x + 3  (x &lt; -1)

&quot;&quot;&quot;</span>

x <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;x = &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> x <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">:</span>
  y <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> x <span class="token operator">-</span><span class="token number">5</span>
<span class="token keyword">elif</span> x <span class="token operator">&gt;=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
  y <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">2</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
  y <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">*</span> x <span class="token operator">+</span> <span class="token number">3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;f(%.2f) = %.2f&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;f(</span><span class="token interpolation"><span class="token punctuation">{</span>x<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">) = </span><span class="token interpolation"><span class="token punctuation">{</span>y<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>试一试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python day-01-15/day-03/if-demo.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),K=s("h3",{id:"三角形",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#三角形","aria-hidden":"true"},"#"),n(" 三角形")],-1),O=s("p",null,"判断输入的边长能否构成三角形，如果能则计算出三角形的周长和面积。",-1),Q=s("p",null,[n("海伦公式"),s("sup",{class:"footnote-ref"},[s("a",{href:"#footnote1"},"[1]"),s("a",{class:"footnote-anchor",id:"footnote-ref1"})]),n("："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"S"),s("mo",null,"="),s("msqrt",null,[s("mrow",null,[s("mi",null,"p"),s("mo",{stretchy:"false"},"("),s("mi",null,"p"),s("mo",null,"−"),s("mi",null,"a"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},"("),s("mi",null,"p"),s("mo",null,"−"),s("mi",null,"b"),s("mo",{stretchy:"false"},")"),s("mo",{stretchy:"false"},"("),s("mi",null,"p"),s("mo",null,"−"),s("mi",null,"a"),s("mo",{stretchy:"false"},")")])])]),s("annotation",{encoding:"application/x-tex"},"S=\\sqrt{p(p - a)(p - b)(p - a)}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.24em","vertical-align":"-0.305em"}}),s("span",{class:"mord sqrt"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.935em"}},[s("span",{class:"svg-align",style:{top:"-3.2em"}},[s("span",{class:"pstrut",style:{height:"3.2em"}}),s("span",{class:"mord",style:{"padding-left":"1em"}},[s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mclose"},")"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mclose"},")"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mclose"},")")])]),s("span",{style:{top:"-2.895em"}},[s("span",{class:"pstrut",style:{height:"3.2em"}}),s("span",{class:"hide-tail",style:{"min-width":"1.02em",height:"1.28em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"400em",height:"1.28em",viewBox:"0 0 400000 1296",preserveAspectRatio:"xMinYMin slice"},[s("path",{d:`M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.305em"}},[s("span")])])])])])])])],-1),U=a(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
判断输入的边长能否构成三角形，如果能则计算出三角形的周长和面积
&quot;&quot;&quot;</span>

a <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;a = &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
b <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;b = &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
c <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;c = &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> a <span class="token operator">+</span> b <span class="token operator">&gt;</span> c <span class="token keyword">and</span> a <span class="token operator">+</span> c <span class="token operator">&gt;</span> b <span class="token keyword">and</span> b <span class="token operator">+</span> c <span class="token operator">&gt;</span> a<span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;周长：%.2f&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>
  p <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
  area <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">*</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> a<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">0.05</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;面积：</span><span class="token interpolation"><span class="token punctuation">{</span>area<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;不能构成三角形&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>试一试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python day-01-15/day-03/if-demo-triangle.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),W=s("hr",{class:"footnotes-sep"},null,-1),X={class:"footnotes"},Z={class:"footnotes-list"},$={id:"footnote1",class:"footnote-item"},ss=s("p",null,"海伦公式又译作希伦公式、海龙公式、希罗公式、海伦－秦九韶公式。它是利用三角形的三条边的边长直接求三角形面积的公式。表达式为：S=√p(p-a)(p-b)(p-c)，它的特点是形式漂亮，便于记忆。",-1),ns={href:"https://baike.baidu.com/item/%E6%B5%B7%E4%BC%A6%E5%85%AC%E5%BC%8F/106956",target:"_blank",rel:"noopener noreferrer"},as=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function ts(es,ps){const l=o("Replit"),i=o("ExternalLinkIcon");return t(),e("div",null,[u,s("p",d,[s("span",h,[s("span",k,[g,s("span",v,[y,s("span",_,[b,s("span",f,[s("span",x,[s("span",w,[s("span",q,[s("span",M,[s("span",z,[B,s("span",H,[E,s("span",V,[(t(),e("svg",A,N))])]),R,s("span",S,[D,s("span",F,[(t(),e("svg",L,I))])]),j]),P]),T])])]),G])])])])])]),J,p(l,{link:"https://replit.com/@FuckDoctors/python-100-days#day-01-15/day-03/if-demo.py"}),K,O,Q,U,p(l,{link:"https://replit.com/@FuckDoctors/python-100-days#day-01-15/day-03/if-demo-triangle.py"}),c(" markdownlint-disable MD046 "),c(" https://plugin-md-enhance.vuejs.press/zh/guide/footnote.html#%E8%AF%AD%E6%B3%95 "),W,s("section",X,[s("ol",Z,[s("li",$,[ss,s("p",null,[n("引用："),s("a",ns,[n("https://baike.baidu.com/item/海伦公式/106956"),p(i)]),n(),as])])])])])}const os=r(m,[["render",ts],["__file","03.分支结构.html.vue"]]);export{os as default};
