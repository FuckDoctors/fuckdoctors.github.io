import{_ as n,P as s,a2 as e,a8 as a}from"./framework-8f15056f.js";const t={},o=a(`<h1 id="_3-速览" tabindex="-1"><a class="header-anchor" href="#_3-速览" aria-hidden="true">#</a> 3. 速览</h1><h2 id="_3-1-python-用作计算器" tabindex="-1"><a class="header-anchor" href="#_3-1-python-用作计算器" aria-hidden="true">#</a> 3.1 Python 用作计算器</h2><h3 id="_3-1-1-数字" tabindex="-1"><a class="header-anchor" href="#_3-1-1-数字" aria-hidden="true">#</a> 3.1.1 数字</h3><p>除了 int 和 float，Python 还支持其他数字类型，例如 Decimal 或 Fraction。</p><h3 id="_3-1-2-字符串" tabindex="-1"><a class="header-anchor" href="#_3-1-2-字符串" aria-hidden="true">#</a> 3.1.2 字符串</h3><p>用单引号（&#39;……&#39;）或双引号（&quot;……&quot;）标注的结果相同，可交替使用，例 <code>&quot;doesn&#39;t&quot;</code>，<code>&#39;&quot;Yes,&quot; they said.&#39;</code>。 反斜杠 <code>\\</code> 用于转义，例 <code>&#39;doesn\\&#39;t&#39;</code>。</p><p>字符串字面值可以包含多行。 一种实现方式是使用三重引号：<code>&quot;&quot;&quot;...&quot;&quot;&quot;</code> 或 <code>&#39;&#39;&#39;...&#39;&#39;&#39;</code>。 字符串中将自动包括行结束符，但也可以在换行的地方添加一个 <code>\\</code> 来避免此情况（避免换行，就是加 <code>\\</code> 后不换行）。 参见以下示例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;\\
Usage: thingy [OPTIONS]
    -h                      Display this usage message
    -H                      Hostname to connect to
&quot;&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出如下（请注意开始的换行符没有被包括在内）：</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>Usage: thingy [OPTIONS]
    -h                      Display this usage message
    -H                      Hostname to connect to
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字符串可以用 <code>+</code> 拼接，也可以用 <code>*</code> 重复，相邻的两个或多个 字符串字面值 （引号标注的字符）会自动合并。 拼接分隔开的长字符串时，这个功能特别实用。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token string">&#39;un&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;ium&#39;</span><span class="token punctuation">)</span> <span class="token comment"># &#39;unununium&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Py&#39;</span> <span class="token string">&#39;thon&#39;</span><span class="token punctuation">)</span> <span class="token comment"># &#39;Python&#39;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Put several strings within parentheses &#39;</span>
      <span class="token string">&#39;to have them joined together.&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),i=[o];function c(d,p){return s(),e("div",null,i)}const l=n(t,[["render",c],["__file","3.introduction.html.vue"]]);export{l as default};
