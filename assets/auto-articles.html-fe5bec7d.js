import{_ as t,o as e,c as p,h as a,a as n,b as s}from"./app-4dfd043d.js";const o={},c=a('<h1 id="自动显示当前路径下的文章列表" tabindex="-1"><a class="header-anchor" href="#自动显示当前路径下的文章列表" aria-hidden="true">#</a> 自动显示当前路径下的文章列表</h1><p>起因是为了方便管理文章，将文章按目录存放，但是这样存放后，地址栏和导航栏会自动多一层路径。</p><p>如果启用了 <code>AutoCatalog</code> 功能的话，会自动显示目录，不开启的话，显示会有问题。<br><code>AutoCatalog</code> 显示的目录不太符合文章的风格，想做成显示文章列表的样子，于是就写了 <code>AutoArticles</code> 功能。<br> 同时，验证了一下自定义布局的功能。</p><h2 id="自定义布局" tabindex="-1"><a class="header-anchor" href="#自定义布局" aria-hidden="true">#</a> 自定义布局</h2><p>为了在文章目录下显示文章列表，默认的布局无法实现，因此需要自定义布局。</p><p>自定义布局，需要在 <code>client.ts</code> 中加入自己的布局。</p>',6),i=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{ts:"",class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" defineClientConfig "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@vuepress/client'"),s(`

`),n("span",{class:"token keyword"},"import"),s(" AutoArticleListLayout "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./theme/layouts/AutoArticleListLayout'"),s(`
`),n("span",{class:"token keyword"},"import"),s(" AutoArticleList "),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'./theme/components/AutoArticleList'"),s(`

`),n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token function"},"defineClientConfig"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// You can override or add layouts here"),s(`
  layouts`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(`
    AutoArticleListLayout`),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`

  `),n("span",{class:"token function-variable function"},"enhance"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" app"),n("span",{class:"token punctuation"},","),s(" router"),n("span",{class:"token punctuation"},","),s(" siteData "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
    app`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"component"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'AutoArticleList'"),n("span",{class:"token punctuation"},","),s(" AutoArticleList"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),l=a(`<p><code>AutoArticleListLayout</code> 是自定义布局，用于显示文章列表。<br> 代码如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">type</span> <span class="token class-name">VNode</span><span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> usePageData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>

<span class="token keyword">import</span> CommonWrapper <span class="token keyword">from</span> <span class="token string">&#39;@theme-hope/components/CommonWrapper&#39;</span>
<span class="token keyword">import</span> SkipLink <span class="token keyword">from</span> <span class="token string">&#39;@theme-hope/components/SkipLink&#39;</span>
<span class="token keyword">import</span> FadeSlideY <span class="token keyword">from</span> <span class="token string">&#39;@theme-hope/components/transitions/FadeSlideY&#39;</span>

<span class="token keyword">import</span> AutoArticleList <span class="token keyword">from</span> <span class="token string">&#39;../components/AutoArticleList&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;AutoArticleListLayout&#39;</span><span class="token punctuation">,</span>

  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token function">usePageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
      <span class="token function">h</span><span class="token punctuation">(</span>SkipLink<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">h</span><span class="token punctuation">(</span>
        CommonWrapper<span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          noSidebar<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>FadeSlideY<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">h</span><span class="token punctuation">(</span>AutoArticleList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文章列表" tabindex="-1"><a class="header-anchor" href="#文章列表" aria-hidden="true">#</a> 文章列表</h2><p>除了布局外，还需要一个文章列表的组件 <code>AutoArticleList</code>。</p><p>它的功能是选出当前路径下的文字，然后显示文章列表。<br> 代码如下：</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token keyword">type</span> <span class="token class-name">VNode</span><span class="token punctuation">,</span> computed<span class="token punctuation">,</span> defineComponent<span class="token punctuation">,</span> h<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">import</span> BreadCrumb <span class="token keyword">from</span> <span class="token string">&#39;@theme-hope/components/BreadCrumb&#39;</span>
<span class="token keyword">import</span> MarkdownContent <span class="token keyword">from</span> <span class="token string">&#39;@theme-hope/components/MarkdownContent&#39;</span>
<span class="token keyword">import</span> DropTransition <span class="token keyword">from</span> <span class="token string">&#39;@theme-hope/components/transitions/DropTransition&#39;</span>
<span class="token keyword">import</span> ArticleList <span class="token keyword">from</span> <span class="token string">&#39;@theme-hope/modules/blog/components/ArticleList&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useArticles <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@theme-hope/modules/blog/composables/index&#39;</span>

<span class="token keyword">import</span> <span class="token string">&#39;../styles/auto-article-list.scss&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> usePageData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vuepress/client&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;AutoArticleList&#39;</span><span class="token punctuation">,</span>

  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> articles <span class="token operator">=</span> <span class="token function">useArticles</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token function">usePageData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> currRoute <span class="token operator">=</span> router<span class="token punctuation">.</span>currentRoute

    <span class="token keyword">const</span> currArticles <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> articles<span class="token punctuation">.</span>value<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
        <span class="token comment">// 需要去掉本身的路径，不然多渲染一个空的列表</span>
        item <span class="token operator">=&gt;</span>
          item<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>currRoute<span class="token punctuation">.</span>value<span class="token punctuation">.</span>path<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
          item<span class="token punctuation">.</span>path <span class="token operator">!==</span> currRoute<span class="token punctuation">.</span>value<span class="token punctuation">.</span>path
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> VNode <span class="token operator">=&gt;</span>
      <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;page blog&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;blog-page-wrapper&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
          <span class="token function">h</span><span class="token punctuation">(</span>
            <span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
              <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&#39;auto-article-list&#39;</span><span class="token punctuation">,</span>
              id<span class="token operator">:</span> <span class="token string">&#39;auto-article-list-main-content&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>
              <span class="token function">h</span><span class="token punctuation">(</span>BreadCrumb<span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token function">h</span><span class="token punctuation">(</span>DropTransition<span class="token punctuation">,</span> <span class="token punctuation">{</span> appear<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> delay<span class="token operator">:</span> <span class="token number">0.24</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
                <span class="token function">h</span><span class="token punctuation">(</span>ArticleList<span class="token punctuation">,</span> <span class="token punctuation">{</span> items<span class="token operator">:</span> currArticles<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>
              <span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span>
          <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">h</span><span class="token punctuation">(</span>DropTransition<span class="token punctuation">,</span> <span class="token punctuation">{</span> appear<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> delay<span class="token operator">:</span> <span class="token number">0.28</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
          <span class="token function">h</span><span class="token punctuation">(</span>MarkdownContent<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>为了让路径导航 <code>BreadCrumb</code> 能正常渲染出来最后一层，文件夹目录需要加一个 <code>README.md</code>，并指定 <code>title</code>。</p><p>同时，为了让自定义布局生效，需要指定自己的布局。<br> 而且，文字列表页不是文章，需要设置不进行索引。</p><p>示例：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>
<span class="token key atrule">title</span><span class="token punctuation">:</span> 主题
<span class="token key atrule">layout</span><span class="token punctuation">:</span> AutoArticleListLayout
<span class="token key atrule">index</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
<span class="token key atrule">article</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
<span class="token punctuation">---</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),u=[c,i,l];function r(k,d){return e(),p("div",null,u)}const m=t(o,[["render",r],["__file","auto-articles.html.vue"]]);export{m as default};
