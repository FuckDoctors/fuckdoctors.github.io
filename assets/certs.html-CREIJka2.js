import{_ as a,o as e,c as s,h as n}from"./app-jOi7NKyG.js";const r={},t=n(`<h1 id="ssl-证书" tabindex="-1"><a class="header-anchor" href="#ssl-证书"><span>SSL 证书</span></a></h1><p>生成 Apache 所需的 SSL 证书。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 生成CA认证机构的证书密钥key</span>
<span class="token comment"># 需要设置密码，输入两次</span>
openssl genrsa <span class="token parameter variable">-des3</span> <span class="token parameter variable">-out</span> ca.key <span class="token number">2048</span>

<span class="token comment"># 比如 123456</span>

<span class="token comment"># 去除密钥里的密码(可选)</span>
<span class="token comment"># 这里需要再输入一次原来设的密码</span>
openssl rsa <span class="token parameter variable">-in</span> ca.key <span class="token parameter variable">-out</span> ca.key

<span class="token comment"># 用私钥ca.key生成CA认证机构的证书ca.crt</span>
<span class="token comment"># 其实就是相当于用私钥生成公钥，再把公钥包装成证书</span>
openssl  req <span class="token parameter variable">-new</span> <span class="token parameter variable">-x509</span> <span class="token parameter variable">-key</span> ca.key <span class="token parameter variable">-out</span> ca.crt <span class="token parameter variable">-days</span> <span class="token number">3650</span>
<span class="token comment"># 这个证书ca.crt有的又称为&quot;根证书&quot;,因为可以用来认证其他证书</span>

<span class="token comment"># 生成自己网站的密钥server.key</span>
openssl genrsa <span class="token parameter variable">-des3</span> <span class="token parameter variable">-out</span> server.key <span class="token number">2048</span>

openssl rsa <span class="token parameter variable">-in</span> server.key <span class="token parameter variable">-out</span> server.key

<span class="token comment"># 比如 123456</span>

<span class="token comment"># 生成自己网站证书的请求文件</span>
<span class="token comment"># 如果找外面的CA机构认证，也是发个请求文件给他们</span>
<span class="token comment"># 这个私钥就包含在请求文件中了，认证机构要用它来生成网站的公钥，然后包装成一个证书</span>
openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> server.key <span class="token parameter variable">-out</span> server.csr

<span class="token comment"># 使用虚拟的CA认证机构的证书ca.crt，来对自己网站的证书请求文件server.csr进行处理，生成签名后的证书server.crt</span>
<span class="token comment"># 注意设置序列号和有效期（一般都设1年，这里设了10年）</span>
openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-in</span> server.csr <span class="token parameter variable">-CA</span> ca.crt <span class="token parameter variable">-CAkey</span> ca.key <span class="token parameter variable">-set_serial</span> 01 <span class="token parameter variable">-out</span> server.crt <span class="token parameter variable">-days</span> <span class="token number">3650</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),p=[t];function c(l,o){return e(),s("div",null,p)}const m=a(r,[["render",c],["__file","certs.html.vue"]]),v=JSON.parse('{"path":"/notes/other/linux/certs.html","title":"SSL 证书","lang":"zh-CN","frontmatter":{"category":["linux"],"description":"SSL 证书 生成 Apache 所需的 SSL 证书。 ","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/other/linux/certs.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"SSL 证书"}],["meta",{"property":"og:description","content":"SSL 证书 生成 Apache 所需的 SSL 证书。 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-13T16:13:19.000Z"}],["meta",{"property":"article:author","content":"Zhao Bin"}],["meta",{"property":"article:modified_time","content":"2024-03-13T16:13:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SSL 证书\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-13T16:13:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"zhaobc.site\\",\\"email\\":\\"hi@zhaobc.site\\"}]}"]]},"headers":[],"git":{"createdTime":1710346399000,"updatedTime":1710346399000,"contributors":[{"name":"Zhao Bin","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":1.12,"words":335},"filePathRelative":"notes/other/linux/certs.md","localizedDate":"2024年3月13日","excerpt":"\\n<p>生成 Apache 所需的 SSL 证书。</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 生成CA认证机构的证书密钥key</span>\\n<span class=\\"token comment\\"># 需要设置密码，输入两次</span>\\nopenssl genrsa <span class=\\"token parameter variable\\">-des3</span> <span class=\\"token parameter variable\\">-out</span> ca.key <span class=\\"token number\\">2048</span>\\n\\n<span class=\\"token comment\\"># 比如 123456</span>\\n\\n<span class=\\"token comment\\"># 去除密钥里的密码(可选)</span>\\n<span class=\\"token comment\\"># 这里需要再输入一次原来设的密码</span>\\nopenssl rsa <span class=\\"token parameter variable\\">-in</span> ca.key <span class=\\"token parameter variable\\">-out</span> ca.key\\n\\n<span class=\\"token comment\\"># 用私钥ca.key生成CA认证机构的证书ca.crt</span>\\n<span class=\\"token comment\\"># 其实就是相当于用私钥生成公钥，再把公钥包装成证书</span>\\nopenssl  req <span class=\\"token parameter variable\\">-new</span> <span class=\\"token parameter variable\\">-x509</span> <span class=\\"token parameter variable\\">-key</span> ca.key <span class=\\"token parameter variable\\">-out</span> ca.crt <span class=\\"token parameter variable\\">-days</span> <span class=\\"token number\\">3650</span>\\n<span class=\\"token comment\\"># 这个证书ca.crt有的又称为\\"根证书\\",因为可以用来认证其他证书</span>\\n\\n<span class=\\"token comment\\"># 生成自己网站的密钥server.key</span>\\nopenssl genrsa <span class=\\"token parameter variable\\">-des3</span> <span class=\\"token parameter variable\\">-out</span> server.key <span class=\\"token number\\">2048</span>\\n\\nopenssl rsa <span class=\\"token parameter variable\\">-in</span> server.key <span class=\\"token parameter variable\\">-out</span> server.key\\n\\n<span class=\\"token comment\\"># 比如 123456</span>\\n\\n<span class=\\"token comment\\"># 生成自己网站证书的请求文件</span>\\n<span class=\\"token comment\\"># 如果找外面的CA机构认证，也是发个请求文件给他们</span>\\n<span class=\\"token comment\\"># 这个私钥就包含在请求文件中了，认证机构要用它来生成网站的公钥，然后包装成一个证书</span>\\nopenssl req <span class=\\"token parameter variable\\">-new</span> <span class=\\"token parameter variable\\">-key</span> server.key <span class=\\"token parameter variable\\">-out</span> server.csr\\n\\n<span class=\\"token comment\\"># 使用虚拟的CA认证机构的证书ca.crt，来对自己网站的证书请求文件server.csr进行处理，生成签名后的证书server.crt</span>\\n<span class=\\"token comment\\"># 注意设置序列号和有效期（一般都设1年，这里设了10年）</span>\\nopenssl x509 <span class=\\"token parameter variable\\">-req</span> <span class=\\"token parameter variable\\">-in</span> server.csr <span class=\\"token parameter variable\\">-CA</span> ca.crt <span class=\\"token parameter variable\\">-CAkey</span> ca.key <span class=\\"token parameter variable\\">-set_serial</span> 01 <span class=\\"token parameter variable\\">-out</span> server.crt <span class=\\"token parameter variable\\">-days</span> <span class=\\"token number\\">3650</span>\\n</code></pre></div>","autoDesc":true}');export{m as comp,v as data};
