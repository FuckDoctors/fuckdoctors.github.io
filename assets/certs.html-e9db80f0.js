const e=JSON.parse('{"key":"v-2d87530b","path":"/notes/other/linux/certs.html","title":"SSL 证书","lang":"zh-CN","frontmatter":{"category":["linux"],"description":"SSL 证书 生成 Apache 所需的 SSL 证书。 # 生成CA认证机构的证书密钥key # 需要设置密码，输入两次 openssl genrsa -des3 -out ca.key 2048 # 比如 123456 # 去除密钥里的密码(可选) # 这里需要再输入一次原来设的密码 openssl rsa -in ca.key -out ca.key # 用私钥ca.key生成CA认证机构的证书ca.crt # 其实就是相当于用私钥生成公钥，再把公钥包装成证书 openssl req -new -x509 -key ca.key -out ca.crt -days 3650 # 这个证书ca.crt有的又称为\\"根证书\\",因为可以用来认证其他证书 # 生成自己网站的密钥server.key openssl genrsa -des3 -out server.key 2048 openssl rsa -in server.key -out server.key # 比如 123456 # 生成自己网站证书的请求文件 # 如果找外面的CA机构认证，也是发个请求文件给他们 # 这个私钥就包含在请求文件中了，认证机构要用它来生成网站的公钥，然后包装成一个证书 openssl req -new -key server.key -out server.csr # 使用虚拟的CA认证机构的证书ca.crt，来对自己网站的证书请求文件server.csr进行处理，生成签名后的证书server.crt # 注意设置序列号和有效期（一般都设1年，这里设了10年） openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt -days 3650","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/other/linux/certs.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"SSL 证书"}],["meta",{"property":"og:description","content":"SSL 证书 生成 Apache 所需的 SSL 证书。 # 生成CA认证机构的证书密钥key # 需要设置密码，输入两次 openssl genrsa -des3 -out ca.key 2048 # 比如 123456 # 去除密钥里的密码(可选) # 这里需要再输入一次原来设的密码 openssl rsa -in ca.key -out ca.key # 用私钥ca.key生成CA认证机构的证书ca.crt # 其实就是相当于用私钥生成公钥，再把公钥包装成证书 openssl req -new -x509 -key ca.key -out ca.crt -days 3650 # 这个证书ca.crt有的又称为\\"根证书\\",因为可以用来认证其他证书 # 生成自己网站的密钥server.key openssl genrsa -des3 -out server.key 2048 openssl rsa -in server.key -out server.key # 比如 123456 # 生成自己网站证书的请求文件 # 如果找外面的CA机构认证，也是发个请求文件给他们 # 这个私钥就包含在请求文件中了，认证机构要用它来生成网站的公钥，然后包装成一个证书 openssl req -new -key server.key -out server.csr # 使用虚拟的CA认证机构的证书ca.crt，来对自己网站的证书请求文件server.csr进行处理，生成签名后的证书server.crt # 注意设置序列号和有效期（一般都设1年，这里设了10年） openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt -days 3650"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-16T16:25:29.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-16T16:25:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SSL 证书\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-16T16:25:29.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1676564729000,"updatedTime":1676564729000,"contributors":[{"name":"Zhao Bin","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":1.12,"words":336},"filePathRelative":"notes/other/linux/certs.md","localizedDate":"2023年2月16日","excerpt":"<h1> SSL 证书</h1>\\n<p>生成 Apache 所需的 SSL 证书。</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 生成CA认证机构的证书密钥key</span>\\n<span class=\\"token comment\\"># 需要设置密码，输入两次</span>\\nopenssl genrsa <span class=\\"token parameter variable\\">-des3</span> <span class=\\"token parameter variable\\">-out</span> ca.key <span class=\\"token number\\">2048</span>\\n\\n<span class=\\"token comment\\"># 比如 123456</span>\\n\\n<span class=\\"token comment\\"># 去除密钥里的密码(可选)</span>\\n<span class=\\"token comment\\"># 这里需要再输入一次原来设的密码</span>\\nopenssl rsa <span class=\\"token parameter variable\\">-in</span> ca.key <span class=\\"token parameter variable\\">-out</span> ca.key\\n\\n<span class=\\"token comment\\"># 用私钥ca.key生成CA认证机构的证书ca.crt</span>\\n<span class=\\"token comment\\"># 其实就是相当于用私钥生成公钥，再把公钥包装成证书</span>\\nopenssl  req <span class=\\"token parameter variable\\">-new</span> <span class=\\"token parameter variable\\">-x509</span> <span class=\\"token parameter variable\\">-key</span> ca.key <span class=\\"token parameter variable\\">-out</span> ca.crt <span class=\\"token parameter variable\\">-days</span> <span class=\\"token number\\">3650</span>\\n<span class=\\"token comment\\"># 这个证书ca.crt有的又称为\\"根证书\\",因为可以用来认证其他证书</span>\\n\\n<span class=\\"token comment\\"># 生成自己网站的密钥server.key</span>\\nopenssl genrsa <span class=\\"token parameter variable\\">-des3</span> <span class=\\"token parameter variable\\">-out</span> server.key <span class=\\"token number\\">2048</span>\\n\\nopenssl rsa <span class=\\"token parameter variable\\">-in</span> server.key <span class=\\"token parameter variable\\">-out</span> server.key\\n\\n<span class=\\"token comment\\"># 比如 123456</span>\\n\\n<span class=\\"token comment\\"># 生成自己网站证书的请求文件</span>\\n<span class=\\"token comment\\"># 如果找外面的CA机构认证，也是发个请求文件给他们</span>\\n<span class=\\"token comment\\"># 这个私钥就包含在请求文件中了，认证机构要用它来生成网站的公钥，然后包装成一个证书</span>\\nopenssl req <span class=\\"token parameter variable\\">-new</span> <span class=\\"token parameter variable\\">-key</span> server.key <span class=\\"token parameter variable\\">-out</span> server.csr\\n\\n<span class=\\"token comment\\"># 使用虚拟的CA认证机构的证书ca.crt，来对自己网站的证书请求文件server.csr进行处理，生成签名后的证书server.crt</span>\\n<span class=\\"token comment\\"># 注意设置序列号和有效期（一般都设1年，这里设了10年）</span>\\nopenssl x509 <span class=\\"token parameter variable\\">-req</span> <span class=\\"token parameter variable\\">-in</span> server.csr <span class=\\"token parameter variable\\">-CA</span> ca.crt <span class=\\"token parameter variable\\">-CAkey</span> ca.key <span class=\\"token parameter variable\\">-set_serial</span> 01 <span class=\\"token parameter variable\\">-out</span> server.crt <span class=\\"token parameter variable\\">-days</span> <span class=\\"token number\\">3650</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
