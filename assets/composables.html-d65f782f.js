const e=JSON.parse('{"key":"v-77fe8168","path":"/notes/frontend/vue/vue3/reusability/composables.html","title":"组合式函数","lang":"zh-CN","frontmatter":{"order":10,"category":["笔记","frontend","vue"],"tag":["vue3"],"description":"组合式函数 什么是“组合式函数”？ 在 Vue 应用的概念中，“组合式函数”是一个利用 Vue 组合式 API 来封装和复用有状态逻辑的函数。 当构建前端应用时，我们常常需要复用公共任务的逻辑，可以封装为无状态的逻辑。有状态逻辑负责管理会随时间而变化的状态。 鼠标跟踪器示例 如果我们想在多个组件中复用这个相同的逻辑，我们可以把这个逻辑以一个组合式函数的形式提取到外部文件中。 如你所见，核心逻辑一点都没有被改变，我们做的只是把它移到一个外部函数中去，并返回需要暴露的状态。 然而更酷的一点是，你还可以嵌套多个组合式函数：一个组合式函数可以调用一个或多个其他的组合式函数。 这使得我们可以像使用多个组件组合成整个应用一样，用多个较小且逻辑独立的单元来组合形成复杂的逻辑。 实际上，这正是我们决定将实现了这一设计模式的 API 集合命名为组合式 API 的原因。","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/frontend/vue/vue3/reusability/composables.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"组合式函数"}],["meta",{"property":"og:description","content":"组合式函数 什么是“组合式函数”？ 在 Vue 应用的概念中，“组合式函数”是一个利用 Vue 组合式 API 来封装和复用有状态逻辑的函数。 当构建前端应用时，我们常常需要复用公共任务的逻辑，可以封装为无状态的逻辑。有状态逻辑负责管理会随时间而变化的状态。 鼠标跟踪器示例 如果我们想在多个组件中复用这个相同的逻辑，我们可以把这个逻辑以一个组合式函数的形式提取到外部文件中。 如你所见，核心逻辑一点都没有被改变，我们做的只是把它移到一个外部函数中去，并返回需要暴露的状态。 然而更酷的一点是，你还可以嵌套多个组合式函数：一个组合式函数可以调用一个或多个其他的组合式函数。 这使得我们可以像使用多个组件组合成整个应用一样，用多个较小且逻辑独立的单元来组合形成复杂的逻辑。 实际上，这正是我们决定将实现了这一设计模式的 API 集合命名为组合式 API 的原因。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-23T02:38:47.000Z"}],["meta",{"property":"article:author","content":"Zhao Bin"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:modified_time","content":"2023-08-23T02:38:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组合式函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-23T02:38:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"https://www.zhaobc.site\\"}]}"]]},"headers":[{"level":2,"title":"什么是“组合式函数”？","slug":"什么是-组合式函数","link":"#什么是-组合式函数","children":[]},{"level":2,"title":"鼠标跟踪器示例","slug":"鼠标跟踪器示例","link":"#鼠标跟踪器示例","children":[]},{"level":2,"title":"异步状态示例","slug":"异步状态示例","link":"#异步状态示例","children":[]},{"level":2,"title":"约定和最佳实践","slug":"约定和最佳实践","link":"#约定和最佳实践","children":[{"level":3,"title":"命名","slug":"命名","link":"#命名","children":[]},{"level":3,"title":"输入参数","slug":"输入参数","link":"#输入参数","children":[]},{"level":3,"title":"返回值","slug":"返回值","link":"#返回值","children":[]},{"level":3,"title":"副作用","slug":"副作用","link":"#副作用","children":[]},{"level":3,"title":"使用限制","slug":"使用限制","link":"#使用限制","children":[]},{"level":3,"title":"为更好的代码组织抽取组合式函数","slug":"为更好的代码组织抽取组合式函数","link":"#为更好的代码组织抽取组合式函数","children":[]},{"level":3,"title":"在选项式 API 中使用组合式函数","slug":"在选项式-api-中使用组合式函数","link":"#在选项式-api-中使用组合式函数","children":[]}]}],"git":{"createdTime":1692758327000,"updatedTime":1692758327000,"contributors":[{"name":"Zhao Bin","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":6.94,"words":2081},"filePathRelative":"notes/frontend/vue/vue3/reusability/composables.md","localizedDate":"2023年8月23日","excerpt":"<h1> 组合式函数</h1>\\n<h2> 什么是“组合式函数”？</h2>\\n<p>在 Vue 应用的概念中，“组合式函数”是一个利用 Vue 组合式 API 来封装和复用<strong>有状态逻辑</strong>的函数。</p>\\n<p>当构建前端应用时，我们常常需要复用公共任务的逻辑，可以封装为<strong>无状态的逻辑</strong>。有状态逻辑负责管理会随时间而变化的状态。</p>\\n<h2> 鼠标跟踪器示例</h2>\\n<p>如果我们想在多个组件中复用这个相同的逻辑，我们可以把这个逻辑以一个组合式函数的形式提取到外部文件中。</p>\\n\\n<p>如你所见，核心逻辑一点都没有被改变，我们做的只是把它移到一个外部函数中去，并返回需要暴露的状态。<br>\\n然而更酷的一点是，你还可以嵌套多个组合式函数：一个组合式函数可以调用一个或多个其他的组合式函数。<br>\\n这使得我们可以像使用多个组件组合成整个应用一样，用多个较小且逻辑独立的单元来组合形成复杂的逻辑。<br>\\n实际上，这正是我们决定将实现了这一设计模式的 API 集合命名为组合式 API 的原因。</p>","autoDesc":true}');export{e as data};
