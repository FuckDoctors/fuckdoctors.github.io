import{_ as r,r as i,o as a,c as l,a as e,b as t,d as n}from"./app-DBlmNksq.js";const c={},s=e("h1",{id:"组合式-api-faq",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#组合式-api-faq"},[e("span",null,"组合式 API FAQ")])],-1),p=e("h2",{id:"什么是组合式-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是组合式-api"},[e("span",null,"什么是组合式 API？")])],-1),d=e("p",null,[t("组合式 API 是一系列 API 的集合，使我们可以使用函数而不是声明式选项的方式来书写 Vue 组件。"),e("br"),t(" 它包含以下 API:")],-1),h={href:"https://vuejs.org/api/reactivity-core.html",target:"_blank",rel:"noopener noreferrer"},u=e("code",null,"ref()",-1),m=e("code",null,"reactive()",-1),_={href:"https://vuejs.org/api/composition-api-lifecycle.html",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"onMounted()",-1),f=e("code",null,"onUnmounted()",-1),I={href:"https://vuejs.org/api/composition-api-dependency-injection.html",target:"_blank",rel:"noopener noreferrer"},P=e("code",null,"privide()",-1),g=e("code",null,"inject()",-1),v={href:"https://github.com/vuejs/composition-api",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"@vue/composition-api",-1),b=e("p",null,[t("虽然，响应式 API 是基于函数的组合，但是，组合式 API 并不是函数式编程。"),e("br"),t(" 组合式 API 是以 Vue 中数据可变的、细粒度的响应性系统为基础的，而函数式编程更强调数据不可变。")],-1),x=e("h2",{id:"为什么要有组合式-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#为什么要有组合式-api"},[e("span",null,"为什么要有组合式 API？")])],-1),k=e("ul",null,[e("li",null,"更好的逻辑复用"),e("li",null,"更灵活的代码组织"),e("li",null,"更好的类型推导"),e("li",null,"更小的打包体积")],-1);function j(V,T){const o=i("ExternalLinkIcon");return a(),l("div",null,[s,p,d,e("ul",null,[e("li",null,[e("a",h,[t("响应式 API"),n(o)]),t(": 例如 "),u,t(" 和 "),m,t("，使我们可以直接创建响应式状态、计算属性和侦听器。")]),e("li",null,[e("a",_,[t("生命周期钩子"),n(o)]),t(": 例如，"),A,t(" 和 "),f,t(", 使我们可以在组件的各个生命周期阶段添加逻辑。")]),e("li",null,[e("a",I,[t("依赖注入"),n(o)]),t(": 例如 "),P,t(" 和 "),g,t("，使我们可以在使用响应性 API 时，利用 Vue 的依赖注入系统。")])]),e("p",null,[t("组合式 API 是 Vue 3 的内置功能，而要在 Vue 2 中使用，则需要使用 "),e("a",v,[y,n(o)]),t("。")]),b,x,k])}const B=r(c,[["render",j],["__file","composition-api.html.vue"]]),F=JSON.parse('{"path":"/notes/frontend/vue/vue3/extra/composition-api.html","title":"组合式 API FAQ","lang":"zh-CN","frontmatter":{"order":10,"category":["笔记","frontend","vue"],"tag":["vue3"],"description":"组合式 API FAQ 什么是组合式 API？ 组合式 API 是一系列 API 的集合，使我们可以使用函数而不是声明式选项的方式来书写 Vue 组件。 它包含以下 API: 响应式 API: 例如 ref() 和 reactive()，使我们可以直接创建响应式状态、计算属性和侦听器。 生命周期钩子: 例如，onMounted() 和 onUnmoun...","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/frontend/vue/vue3/extra/composition-api.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"组合式 API FAQ"}],["meta",{"property":"og:description","content":"组合式 API FAQ 什么是组合式 API？ 组合式 API 是一系列 API 的集合，使我们可以使用函数而不是声明式选项的方式来书写 Vue 组件。 它包含以下 API: 响应式 API: 例如 ref() 和 reactive()，使我们可以直接创建响应式状态、计算属性和侦听器。 生命周期钩子: 例如，onMounted() 和 onUnmoun..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T11:10:32.000Z"}],["meta",{"property":"article:author","content":"Zhao Bin"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:modified_time","content":"2024-02-28T11:10:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组合式 API FAQ\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-28T11:10:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"zhaobc.site\\",\\"email\\":\\"hi@zhaobc.site\\"}]}"]]},"headers":[{"level":2,"title":"什么是组合式 API？","slug":"什么是组合式-api","link":"#什么是组合式-api","children":[]},{"level":2,"title":"为什么要有组合式 API？","slug":"为什么要有组合式-api","link":"#为什么要有组合式-api","children":[]}],"git":{"createdTime":1709118632000,"updatedTime":1709118632000,"contributors":[{"name":"Zhao Bin","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":1.03,"words":308},"filePathRelative":"notes/frontend/vue/vue3/extra/composition-api.md","localizedDate":"2024年2月28日","excerpt":"\\n<h2>什么是组合式 API？</h2>\\n<p>组合式 API 是一系列 API 的集合，使我们可以使用函数而不是声明式选项的方式来书写 Vue 组件。<br>\\n它包含以下 API:</p>\\n<ul>\\n<li><a href=\\"https://vuejs.org/api/reactivity-core.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">响应式 API</a>: 例如 <code>ref()</code> 和 <code>reactive()</code>，使我们可以直接创建响应式状态、计算属性和侦听器。</li>\\n<li><a href=\\"https://vuejs.org/api/composition-api-lifecycle.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">生命周期钩子</a>: 例如，<code>onMounted()</code> 和 <code>onUnmounted()</code>, 使我们可以在组件的各个生命周期阶段添加逻辑。</li>\\n<li><a href=\\"https://vuejs.org/api/composition-api-dependency-injection.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">依赖注入</a>: 例如 <code>privide()</code> 和 <code>inject()</code>，使我们可以在使用响应性 API 时，利用 Vue 的依赖注入系统。</li>\\n</ul>","autoDesc":true}');export{B as comp,F as data};
