const e=JSON.parse('{"key":"v-1b79eff2","path":"/notes/frontend/vue/vue3/reusability/custom-directives.html","title":"自定义指令","lang":"zh-CN","frontmatter":{"order":20,"category":["笔记","frontend","vue"],"tag":["vue3"],"description":"自定义指令 介绍 除了 Vue 内置的一系列指令 (比如 v-model 或 v-show) 之外，Vue 还允许你注册自定义的指令。 我们已经介绍了两种在 Vue 中重用代码的方式：组件和组合式函数。组件是主要的构建模块，而组合式函数则侧重于有状态的逻辑。另一方面，自定义指令主要是为了重用涉及普通元素的底层 DOM 访问的逻辑。 一个自定义指令被定义为一个包含类似于组件的生命周期钩子的对象。钩子接收指令绑定到的元素。下面是一个自定义指令的例子，当一个 input 元素被 Vue 插入到 DOM 中后，它将被聚焦：","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/frontend/vue/vue3/reusability/custom-directives.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"自定义指令"}],["meta",{"property":"og:description","content":"自定义指令 介绍 除了 Vue 内置的一系列指令 (比如 v-model 或 v-show) 之外，Vue 还允许你注册自定义的指令。 我们已经介绍了两种在 Vue 中重用代码的方式：组件和组合式函数。组件是主要的构建模块，而组合式函数则侧重于有状态的逻辑。另一方面，自定义指令主要是为了重用涉及普通元素的底层 DOM 访问的逻辑。 一个自定义指令被定义为一个包含类似于组件的生命周期钩子的对象。钩子接收指令绑定到的元素。下面是一个自定义指令的例子，当一个 input 元素被 Vue 插入到 DOM 中后，它将被聚焦："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-27T11:03:26.000Z"}],["meta",{"property":"article:author","content":"Zhao Bin"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:modified_time","content":"2023-03-27T11:03:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"自定义指令\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-27T11:03:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"https://www.zhaobc.site\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"指令钩子","slug":"指令钩子","link":"#指令钩子","children":[{"level":3,"title":"钩子参数","slug":"钩子参数","link":"#钩子参数","children":[]},{"level":3,"title":"简化形式","slug":"简化形式","link":"#简化形式","children":[]},{"level":3,"title":"对象字面量","slug":"对象字面量","link":"#对象字面量","children":[]},{"level":3,"title":"在组件上使用","slug":"在组件上使用","link":"#在组件上使用","children":[]}]}],"git":{"createdTime":1679915006000,"updatedTime":1679915006000,"contributors":[{"name":"Zhao Bin","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":4.19,"words":1258},"filePathRelative":"notes/frontend/vue/vue3/reusability/custom-directives.md","localizedDate":"2023年3月27日","excerpt":"<h1> 自定义指令</h1>\\n<h2> 介绍</h2>\\n<p>除了 Vue 内置的一系列指令 (比如 v-model 或 v-show) 之外，Vue 还允许你注册自定义的指令。</p>\\n<p>我们已经介绍了两种在 Vue 中重用代码的方式：<strong>组件</strong>和<strong>组合式函数</strong>。组件是主要的构建模块，而组合式函数则侧重于有状态的逻辑。另一方面，自定义指令主要是为了重用涉及普通元素的底层 DOM 访问的逻辑。</p>\\n<p>一个自定义指令被定义为一个包含类似于组件的生命周期钩子的对象。钩子接收指令绑定到的元素。下面是一个自定义指令的例子，当一个 input 元素被 Vue 插入到 DOM 中后，它将被聚焦：</p>","autoDesc":true}');export{e as data};
