import{_ as r,Y as a,Z as l,$ as o,a0 as e,a1 as t,a2 as h,a7 as s,a8 as i,E as c}from"./framework-9b31b1d2.js";const _={},u=o("h1",{id:"自定义主题",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#自定义主题","aria-hidden":"true"},"#"),e(" 自定义主题")],-1),p={href:"https://vuepress-theme-hope.github.io/v2/zh",target:"_blank",rel:"noopener noreferrer"},m=o("code",null,"vuepress-theme-hope",-1),f={href:"https://github.com/Mister-Hope",target:"_blank",rel:"noopener noreferrer"},g=o("p",null,[e("使用 "),o("code",null,"vuepress-theme-hope"),e(" 时，发现了一些小问题，自己重写了一点 "),o("code",null,"css"),e("，根据文档可以替换组件，或者继承主题实现自己的主题。 最开始修改过的导航栏跟博主信息的间距问题，文章置顶图标，已经提过 "),o("code",null,"PR"),e(" 不需要再自定义了。 下面介绍一下自定义的部分。")],-1),k=i('<h2 id="自定义侧边栏文字" tabindex="-1"><a class="header-anchor" href="#自定义侧边栏文字" aria-hidden="true">#</a> 自定义侧边栏文字</h2><p>侧边栏可以使用主题的自动生成功能直接生成，但是目录下的 <code>README.md</code> 生成时，目录菜单跟 <code>README.md</code> 的侧边栏文字显示是一致的，感官上有些重复。 另外，记录笔记时，想生成那种跟书本一样，<code>README.md</code> 生成<strong>前言</strong>或<strong>目录</strong>的样子。所以自己重写了侧边栏生成的处理。</p><p>做法是重写 <code>theme/node/sidebar.ts</code>，在生成 <code>README.md</code> 的 <code>title</code> 时读取自定义的 <code>frontmatter.sidebarText</code>。 由于主题提供的可替换组件里没有这个组件，为了让主题读取自己自定义的处理，使用了 <code>onPrepared</code> 钩子函数。</p><h2 id="增加自己的-markdown-插件" tabindex="-1"><a class="header-anchor" href="#增加自己的-markdown-插件" aria-hidden="true">#</a> 增加自己的 markdown 插件</h2><p><code>vuepress-theme-hope</code> 的 <code>md-enhance</code> 已经提供了很多开箱即用的插件，如果有不满足的话，可以自己编写。 本站增加了下面的插件：</p>',5),E=o("code",null,"chart",-1),x=o("code",null,"chart.js",-1),v=o("code",null,"echarts",-1),b=o("code",null,"chart",-1),R=o("code",null,"echarts",-1),w=o("code",null,"demo",-1),M=o("code",null,"export default { // ... }",-1),V=o("code",null,"script setup",-1),N=o("code",null,"Vue3",-1),y=o("code",null,"playground",-1);function A(D,L){const n=c("ExternalLinkIcon"),d=c("RouterLink");return a(),l("div",null,[u,o("p",null,[e("本站使用功能强大的 "),o("a",p,[e("vuepress-theme-hope"),t(n)]),e(" 主题，主题简洁，markdown 插件功能丰富。 同时，"),m,e(" 提供了完善的文档，以及 QQ 交流群，作者 "),o("a",f,[e("Mr.Hope"),t(n)]),e(" 更新频率高，问题反馈处理也很及时。")]),g,h(" more "),k,o("ul",null,[o("li",null,[t(d,{to:"/posts/theme/echarts-plugin.html"},{default:s(()=>[e("echarts")]),_:1}),e(" 主题内置了 "),E,e(" 图表，使用 "),x,e(" 做图表，但是国内 "),v,e(" 使用的还是挺多的，刚好用过一点，所以仿照 "),b,e("，编写了一个 "),R,e(" 图表。")]),o("li",null,[t(d,{to:"/posts/theme/playground-plugin-v3.html"},{default:s(()=>[e("playground")]),_:1}),e(" 主题内置的 "),w,e(" 挺好的，对于记录笔记，展示代码片段很方便。 但是，只能使用 "),M,e(" 形式，不支持 "),V,e(" 语法糖， 于是借鉴了 "),N,e(" 官方 Playground 以及 Element Plus 的代码示例简单做了一个 markdown 的 "),y,e("。")])])])}const z=r(_,[["render",A],["__file","customize-theme.html.vue"]]);export{z as default};
