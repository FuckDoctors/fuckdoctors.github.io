import{_ as s,c as a,a as e,o as t}from"./app-Bww6b0FS.js";const n={};function l(h,i){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="gradle-小提示" tabindex="-1"><a class="header-anchor" href="#gradle-小提示"><span>gradle 小提示</span></a></h1><h2 id="导出所有依赖包" tabindex="-1"><a class="header-anchor" href="#导出所有依赖包"><span>导出所有依赖包</span></a></h2><div class="language-groovy" data-highlighter="shiki" data-ext="groovy" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-groovy"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">task </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">copyRuntimeDependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">Copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  into </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;$projectDir/WebContent/WEB-INF/lib&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  from configurations.runtimeClasspath</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h2 id="导出-web-inf-lib-以外的所有依赖包" tabindex="-1"><a class="header-anchor" href="#导出-web-inf-lib-以外的所有依赖包"><span>导出 <code>WEB-INF/lib</code> 以外的所有依赖包</span></a></h2><div class="language-groovy" data-highlighter="shiki" data-ext="groovy" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-groovy"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">task </span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">copyCompileDependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">Copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  into </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;xxx/lib&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  from configurations.compileClasspath</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><h2 id="排除特定配置的依赖-如-providedcompile" tabindex="-1"><a class="header-anchor" href="#排除特定配置的依赖-如-providedcompile"><span>排除特定配置的依赖，如 <code>providedCompile</code></span></a></h2><p>如果 <code>WEB-INF/lib</code> 中的 JAR 是通过依赖配置（如 <code>providedCompile</code>）管理的，需要过滤掉特定配置：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 列出所有配置的依赖，但排除 providedCompile</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gradle</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dependencies</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --configuration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compileClasspath</span></span></code></pre></div>`,8)]))}const r=s(n,[["render",l]]),o=JSON.parse(`{"path":"/notes/other/tools/gradle.html","title":"gradle 小提示","lang":"zh-CN","frontmatter":{"category":["tools"],"description":"gradle 小提示 导出所有依赖包 导出 WEB-INF/lib 以外的所有依赖包 排除特定配置的依赖，如 providedCompile 如果 WEB-INF/lib 中的 JAR 是通过依赖配置（如 providedCompile）管理的，需要过滤掉特定配置：","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gradle 小提示\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-07T03:10:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"zhaobc.site\\",\\"email\\":\\"hi@zhaobc.site\\"}]}"],["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/other/tools/gradle.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"gradle 小提示"}],["meta",{"property":"og:description","content":"gradle 小提示 导出所有依赖包 导出 WEB-INF/lib 以外的所有依赖包 排除特定配置的依赖，如 providedCompile 如果 WEB-INF/lib 中的 JAR 是通过依赖配置（如 providedCompile）管理的，需要过滤掉特定配置："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-07T03:10:26.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-07T03:10:26.000Z"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://www.zhaobc.site/rss.xml","title":"赵斌的小站 RSS Feed"}]]},"git":{"createdTime":1754536226000,"updatedTime":1754536226000,"contributors":[{"name":"Zhao Bin","username":"","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":0.34,"words":101},"filePathRelative":"notes/other/tools/gradle.md","excerpt":"\\n<h2>导出所有依赖包</h2>\\n<div class=\\"language-groovy\\" data-highlighter=\\"shiki\\" data-ext=\\"groovy\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-groovy\\"><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">task </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">copyRuntimeDependencies</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">type</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">: </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">Copy</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  into </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'$projectDir/WebContent/WEB-INF/lib'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  from configurations.runtimeClasspath</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n</div>","autoDesc":true}`);export{r as comp,o as data};
