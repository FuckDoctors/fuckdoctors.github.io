import{_ as a,r as s,o as t,c as p,d as o,h as e}from"./app-CY7sylX_.js";const c={},l=e(`<h1 id="javascript-group-by" tabindex="-1"><a class="header-anchor" href="#javascript-group-by"><span>Javascript Group By</span></a></h1><h2 id="object-数组分组" tabindex="-1"><a class="header-anchor" href="#object-数组分组"><span>Object 数组分组</span></a></h2><p>下面的代码是用来按数组对象的指定属性来排序。</p><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> groupBy <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> grouped <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>group<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> data <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      group<span class="token punctuation">[</span>data<span class="token punctuation">]</span> <span class="token operator">=</span> group<span class="token punctuation">[</span>data<span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      group<span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
      <span class="token keyword">return</span> group
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> grouped
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3>`,6);function r(i,u){const n=s("Playground");return t(),p("div",null,[l,o(n,{title:"%E5%AF%B9%E8%B1%A1%E6%95%B0%E7%BB%84%E5%88%86%E7%BB%84",link:"https%3A%2F%2Fwww.typescriptlang.org%2Fplay%23code%2FMYewdgzgLgBA5gJxAVwA4CECeMC8MAUAhgggFwyFiYDaAugDQwDWAppudAgJZhwCU5SjVowAPjDDIANlNwA%2BGAG8AUDBhcAZgWII%2BS1WpihIsRClQsAJrgokAdAivJgLfPjNpBVRiABGAKy9MPRwFFUNDY2gYS0IoQhs-f2pWTFoDCI9Ualj4kTwsnLjCEQB%2BUpg6DMNC3JK7VGQIAAt8JL5qtUcoZAQweCQ0aoBfRkVhjuru3v6sqwNh5QNpvolpKWVF5SjYHRtqA3DDMEIAWxZyAHIAL2bCP2BL%2BmrQU9OuKCuoFmgARieFs81Ec1CdzldbvdfMAAEwAiKvd6fGCXb5-eEwUaHapgi4oyEPDFqREfL4-KBwoGY57pbbgCAgKQsOxSEBwIgkDpRRnM1nsrJYDkIRiXXGXPgdIA"})])}const d=a(c,[["render",r],["__file","group-by.html.vue"]]),g=JSON.parse('{"path":"/notes/frontend/js/code-snippets/group-by.html","title":"Javascript Group By","lang":"zh-CN","frontmatter":{"category":["笔记","frontend","code-snippets"],"tag":["js","javascript"],"description":"Javascript Group By Object 数组分组 下面的代码是用来按数组对象的指定属性来排序。 代码 示例 ","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/frontend/js/code-snippets/group-by.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"Javascript Group By"}],["meta",{"property":"og:description","content":"Javascript Group By Object 数组分组 下面的代码是用来按数组对象的指定属性来排序。 代码 示例 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-28T05:21:29.000Z"}],["meta",{"property":"article:author","content":"Zhao Bin"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2024-02-28T05:21:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Javascript Group By\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-28T05:21:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"zhaobc.site\\",\\"email\\":\\"hi@zhaobc.site\\"}]}"]]},"headers":[{"level":2,"title":"Object 数组分组","slug":"object-数组分组","link":"#object-数组分组","children":[{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]}],"git":{"createdTime":1709097689000,"updatedTime":1709097689000,"contributors":[{"name":"Zhao Bin","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":0.48,"words":145},"filePathRelative":"notes/frontend/js/code-snippets/group-by.md","localizedDate":"2024年2月28日","excerpt":"\\n<h2>Object 数组分组</h2>\\n<p>下面的代码是用来按数组对象的指定属性来排序。</p>\\n<h3>代码</h3>\\n<div class=\\"language-typescript\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">const</span> groupBy <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> key<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> grouped <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reduce</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>group<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">,</span> obj<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> data <span class=\\"token operator\\">=</span> obj<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span>\\n      group<span class=\\"token punctuation\\">[</span>data<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> group<span class=\\"token punctuation\\">[</span>data<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">??</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span>\\n      group<span class=\\"token punctuation\\">[</span>data<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token keyword\\">return</span> group\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n    <span class=\\"token keyword\\">return</span> grouped\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,g as data};
