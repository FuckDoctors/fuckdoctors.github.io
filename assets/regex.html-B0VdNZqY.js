import{_ as e,c as a,a as i,o as s}from"./app-BhCyOiz2.js";const n={};function o(p,t){return s(),a("div",null,t[0]||(t[0]=[i(`<h1 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式"><span>正则表达式</span></a></h1><h2 id="查找不含指定字符串的行" tabindex="-1"><a class="header-anchor" href="#查找不含指定字符串的行"><span>查找不含指定字符串的行</span></a></h2><div class="language-txt" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>^(?!指定字符串).*$</span></span></code></pre></div><p>可视化</p><div class="text-center"><img src="https://www.plantuml.com/plantuml/svg/SoWkIImgAKfDJwtWAiaioKbLU3P_wRFEVKzsz3wTiFfPJ_lJTREUhft-VCso9pisFP_Lyc9X3rUSXhqYceocNeoM2fT3QbuAs2W0" alt=""></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>直接书写 plantuml 会被替换成一个图片，直接在 <code>[vp-content]</code> 下面。<br> 主题默认使用 <code>plugin-photo-swipe</code> 来浏览图片，它默认的选择器不能选择 <code>[vp-content]</code> 直接儿子元素，所以，需要在 plantuml 外面包一层 <code>div</code> 才可以。<br> 另外，<code>&lt;div&gt;</code> 与 plantuml 内容直接需要空一行，不然 plantuml 不能正确渲染。</p></div><p>需求：查找 MyBatis 的 sqlmap 中未指定 <code>jdbcType</code> 的参数。</p><div class="language-txt" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>// 查找以 # 或 $ 开头，且不含 jdbcType 或包含no 或 offset 或 limit 的行</span></span>
<span class="line"><span>^.*[#\\$]\\{(?!.*jdbcType)(?!*.no)(?!offset)(?!limit).*$</span></span></code></pre></div>`,8)]))}const r=e(n,[["render",o]]),l=JSON.parse('{"path":"/notes/other/dev/regex.html","title":"正则表达式","lang":"zh-CN","frontmatter":{"category":["dev"],"tag":["regex","正则表达式"],"description":"正则表达式 查找不含指定字符串的行 可视化 注意 直接书写 plantuml 会被替换成一个图片，直接在 [vp-content] 下面。 主题默认使用 plugin-photo-swipe 来浏览图片，它默认的选择器不能选择 [vp-content] 直接儿子元素，所以，需要在 plantuml 外面包一层 div 才可以。 另外，<div> 与 p...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"正则表达式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-16T11:13:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"zhaobc.site\\",\\"email\\":\\"hi@zhaobc.site\\"}]}"],["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/other/dev/regex.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"正则表达式"}],["meta",{"property":"og:description","content":"正则表达式 查找不含指定字符串的行 可视化 注意 直接书写 plantuml 会被替换成一个图片，直接在 [vp-content] 下面。 主题默认使用 plugin-photo-swipe 来浏览图片，它默认的选择器不能选择 [vp-content] 直接儿子元素，所以，需要在 plantuml 外面包一层 div 才可以。 另外，<div> 与 p..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-16T11:13:24.000Z"}],["meta",{"property":"article:tag","content":"正则表达式"}],["meta",{"property":"article:tag","content":"regex"}],["meta",{"property":"article:modified_time","content":"2024-12-16T11:13:24.000Z"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://www.zhaobc.site/rss.xml","title":"赵斌的小站 RSS Feed"}]]},"git":{"createdTime":1730096335000,"updatedTime":1734347604000,"contributors":[{"name":"Zhao Bin","username":"","email":"413853119@qq.com","commits":1},{"name":"FuckDoctors","username":"FuckDoctors","email":"413853119@qq.com","commits":1,"url":"https://github.com/FuckDoctors"}]},"readingTime":{"minutes":0.66,"words":197},"filePathRelative":"notes/other/dev/regex.md","excerpt":"\\n<h2>查找不含指定字符串的行</h2>\\n<div class=\\"language-txt\\" data-highlighter=\\"shiki\\" data-ext=\\"txt\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-txt\\"><span class=\\"line\\"><span>^(?!指定字符串).*$</span></span></code></pre>\\n</div>","autoDesc":true}');export{r as comp,l as data};
