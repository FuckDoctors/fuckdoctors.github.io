const e=JSON.parse(`{"key":"v-02ab75f5","path":"/notes/frontend/vue/vue3/extra/render-and-jsx.html","title":"渲染函数 & JSX","lang":"zh-CN","frontmatter":{"order":30,"category":["笔记","frontend","vue"],"tag":["vue3"],"description":"渲染函数 &amp; JSX 在绝大多数情况下，Vue 推荐使用模板语法来搭建 HTML。然而在某些使用场景下，我们真的需要用到 JavaScript 完全的编程能力。这时渲染函数就派上用场了。 基本用法 创建 VNodes Vue 提供了一个 h() 函数用于创建 vnodes: import { h } from 'vue' const vnode = h( 'div', // type { id: 'foo', class: 'bar' }, // props [ // children ] )","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/frontend/vue/vue3/extra/render-and-jsx.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"渲染函数 & JSX"}],["meta",{"property":"og:description","content":"渲染函数 &amp; JSX 在绝大多数情况下，Vue 推荐使用模板语法来搭建 HTML。然而在某些使用场景下，我们真的需要用到 JavaScript 完全的编程能力。这时渲染函数就派上用场了。 基本用法 创建 VNodes Vue 提供了一个 h() 函数用于创建 vnodes: import { h } from 'vue' const vnode = h( 'div', // type { id: 'foo', class: 'bar' }, // props [ // children ] )"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-22T15:52:23.000Z"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:modified_time","content":"2023-02-22T15:52:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"渲染函数 & JSX\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-22T15:52:23.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[{"level":3,"title":"创建 VNodes","slug":"创建-vnodes","link":"#创建-vnodes","children":[]},{"level":3,"title":"声明渲染函数","slug":"声明渲染函数","link":"#声明渲染函数","children":[]},{"level":3,"title":"Vnodes 必须唯一","slug":"vnodes-必须唯一","link":"#vnodes-必须唯一","children":[]}]},{"level":2,"title":"JSX / TSX","slug":"jsx-tsx","link":"#jsx-tsx","children":[{"level":3,"title":"渲染函数案例","slug":"渲染函数案例","link":"#渲染函数案例","children":[]},{"level":3,"title":"组件","slug":"组件","link":"#组件","children":[]},{"level":3,"title":"渲染插槽","slug":"渲染插槽","link":"#渲染插槽","children":[]},{"level":3,"title":"传递插槽","slug":"传递插槽","link":"#传递插槽","children":[]},{"level":3,"title":"内置组件","slug":"内置组件","link":"#内置组件","children":[]},{"level":3,"title":"v-model","slug":"v-model","link":"#v-model","children":[]},{"level":3,"title":"自定义指令","slug":"自定义指令","link":"#自定义指令","children":[]},{"level":3,"title":"函数式组件","slug":"函数式组件","link":"#函数式组件","children":[]}]}],"git":{"createdTime":1677081143000,"updatedTime":1677081143000,"contributors":[{"name":"Zhao Bin","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":6.68,"words":2003},"filePathRelative":"notes/frontend/vue/vue3/extra/render-and-jsx.md","localizedDate":"2023年2月22日","excerpt":"<h1> 渲染函数 &amp; JSX</h1>\\n<p>在绝大多数情况下，Vue 推荐使用模板语法来搭建 HTML。然而在某些使用场景下，我们真的需要用到 JavaScript 完全的编程能力。这时渲染函数就派上用场了。</p>\\n<h2> 基本用法</h2>\\n<h3> 创建 VNodes</h3>\\n<p>Vue 提供了一个 <code>h()</code> 函数用于创建 vnodes:</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> h <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue'</span>\\n\\n<span class=\\"token keyword\\">const</span> vnode <span class=\\"token operator\\">=</span> <span class=\\"token function\\">h</span><span class=\\"token punctuation\\">(</span>\\n  <span class=\\"token string\\">'div'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// type</span>\\n  <span class=\\"token punctuation\\">{</span> <span class=\\"token literal-property property\\">id</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'foo'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">class</span><span class=\\"token operator\\">:</span> <span class=\\"token string\\">'bar'</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token comment\\">// props</span>\\n  <span class=\\"token punctuation\\">[</span>\\n    <span class=\\"token comment\\">// children</span>\\n  <span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
