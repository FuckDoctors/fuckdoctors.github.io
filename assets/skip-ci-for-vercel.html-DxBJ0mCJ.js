import{_ as i,r as o,o as c,c as l,a as e,b as s,d as a,e as p,h as t}from"./app-DTOxIsMI.js";const r={},d=e("h1",{id:"取消-vercel-发布",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#取消-vercel-发布"},[e("span",null,"取消 Vercel 发布")])],-1),u=e("p",null,[s("在 Github Actions 中，我们可以选择性地 取消 workflow 的执行，比如 在 git message 中 填写 [skip ci] 或者 [ci skip] 即可达到目的。"),e("br"),s(" 但是，在 vercel 中，这种方法不起作用。")],-1),m=e("p",null,"搜索了一下资料，发现 vercel 中也可以自定义来实现。",-1),v={href:"https://vercel.com/support/articles/how-do-i-use-the-ignored-build-step-field-on-vercel",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/vercel/vercel/discussions/5765",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">bash</span> <span class="token parameter variable">-c</span> <span class="token string">&#39;echo &quot;$VERCEL_GIT_COMMIT_MESSAGE&quot; | grep -iE &quot;\\[skip ci\\]|\\[ci skip\\]&quot;&#39;</span>
<span class="token comment"># 单独忽略 docs-ci</span>
<span class="token comment"># bash -c &#39;echo &quot;$VERCEL_GIT_COMMIT_MESSAGE&quot; | grep -iE &quot;\\[skip (docs-)?ci\\]|\\[(docs-)?ci skip\\]&quot;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=t(`<p>也可以按照上面写的方式，写一个脚本来做。下面是为了留下记录，所以写了一个比较繁琐的脚本：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># How do I use the &quot;Ignored Build Step&quot; field on Vercel?</span>
<span class="token comment"># https://vercel.com/support/articles/how-do-i-use-the-ignored-build-step-field-on-vercel</span>

<span class="token comment"># Skip deploys for commits that have [skip-ci] in the name</span>
<span class="token comment"># https://github.com/vercel/vercel/discussions/5765</span>
<span class="token comment"># 可以在&quot;Ignored Build Step&quot;中直接使用： bash -c &#39;echo &quot;$VERCEL_GIT_COMMIT_MESSAGE&quot; | grep -iE &quot;\\[skip ci\\]|\\[ci skip\\]&quot;&#39;</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;VERCEL_GIT_COMMIT_REF: <span class="token variable">$VERCEL_GIT_COMMIT_REF</span>&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;VERCEL_GIT_COMMIT_MESSAGE: <span class="token variable">$VERCEL_GIT_COMMIT_MESSAGE</span>&quot;</span>

<span class="token comment"># grep通过返回一个状态值来说明搜索的状态，</span>
<span class="token comment"># 如果模板搜索成功，则返回0，如果搜索不成功，则返回1，</span>
<span class="token comment"># 如果搜索的文件不存在，则返回2。</span>
<span class="token comment"># # 过滤message的第一行是否包含[skip ci]或者[ci skip]</span>
<span class="token comment"># echo &quot;$VERCEL_GIT_COMMIT_MESSAGE&quot; | head -n 1 | grep -iE &quot;\\[skip ci\\]|\\[ci skip\\]&quot;</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$VERCEL_GIT_COMMIT_MESSAGE</span>&quot;</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-iE</span> <span class="token string">&quot;\\[skip ci\\]|\\[ci skip\\]&quot;</span>
<span class="token comment"># echo &quot;$VERCEL_GIT_COMMIT_MESSAGE&quot; | grep -iE &quot;\\[skip (docs-)?ci\\]|\\[(docs-)?ci skip\\]&quot;</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$?</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;0&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token comment"># Don&#39;t build</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;🛑 - Build cancelled&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">else</span>
  <span class="token comment"># Proceed with the build</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;✅ - Build can proceed&quot;</span>
  <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">fi</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function _(g,E){const n=o("ExternalLinkIcon");return c(),l("div",null,[d,u,m,e("ul",null,[e("li",null,[e("a",v,[s('How do I use the "Ignored Build Step" field on Vercel?'),a(n)])]),e("li",null,[e("a",k,[s("Skip deploys for commits that have [skip-ci] in the name"),a(n)])])]),h,p(" more "),b])}const f=i(r,[["render",_],["__file","skip-ci-for-vercel.html.vue"]]),I=JSON.parse(`{"path":"/posts/devops/skip-ci-for-vercel.html","title":"取消 Vercel 发布","lang":"zh-CN","frontmatter":{"article":true,"date":"2022-04-13T00:00:00.000Z","category":["devops"],"tag":["devops","ci/cd"],"head":[["meta",{"name":"description","content":"Vercel 中跳过发布"}],["meta",{"property":"og:url","content":"https://www.zhaobc.site/posts/devops/skip-ci-for-vercel.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"取消 Vercel 发布"}],["meta",{"property":"og:description","content":"取消 Vercel 发布 在 Github Actions 中，我们可以选择性地 取消 workflow 的执行，比如 在 git message 中 填写 [skip ci] 或者 [ci skip] 即可达到目的。 但是，在 vercel 中，这种方法不起作用。 搜索了一下资料，发现 vercel 中也可以自定义来实现。 How do I use ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-29T11:10:06.000Z"}],["meta",{"property":"article:author","content":"Zhao Bin"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"ci/cd"}],["meta",{"property":"article:published_time","content":"2022-04-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-29T11:10:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"取消 Vercel 发布\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-29T11:10:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"zhaobc.site\\",\\"email\\":\\"hi@zhaobc.site\\"}]}"]],"description":"取消 Vercel 发布 在 Github Actions 中，我们可以选择性地 取消 workflow 的执行，比如 在 git message 中 填写 [skip ci] 或者 [ci skip] 即可达到目的。 但是，在 vercel 中，这种方法不起作用。 搜索了一下资料，发现 vercel 中也可以自定义来实现。 How do I use ..."},"headers":[],"git":{"createdTime":1709205006000,"updatedTime":1709205006000,"contributors":[{"name":"Zhao Bin","email":"413853119@qq.com","commits":1}]},"readingTime":{"minutes":1.31,"words":393},"filePathRelative":"posts/devops/skip-ci-for-vercel.md","localizedDate":"2022年4月13日","excerpt":"\\n<p>在 Github Actions 中，我们可以选择性地 取消 workflow 的执行，比如 在 git message 中 填写 [skip ci] 或者 [ci skip] 即可达到目的。<br>\\n但是，在 vercel 中，这种方法不起作用。</p>\\n<p>搜索了一下资料，发现 vercel 中也可以自定义来实现。</p>\\n<ul>\\n<li><a href=\\"https://vercel.com/support/articles/how-do-i-use-the-ignored-build-step-field-on-vercel\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">How do I use the \\"Ignored Build Step\\" field on Vercel?</a></li>\\n<li><a href=\\"https://github.com/vercel/vercel/discussions/5765\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Skip deploys for commits that have [skip-ci] in the name</a></li>\\n</ul>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">bash</span> <span class=\\"token parameter variable\\">-c</span> <span class=\\"token string\\">'echo \\"$VERCEL_GIT_COMMIT_MESSAGE\\" | grep -iE \\"\\\\[skip ci\\\\]|\\\\[ci skip\\\\]\\"'</span>\\n<span class=\\"token comment\\"># 单独忽略 docs-ci</span>\\n<span class=\\"token comment\\"># bash -c 'echo \\"$VERCEL_GIT_COMMIT_MESSAGE\\" | grep -iE \\"\\\\[skip (docs-)?ci\\\\]|\\\\[(docs-)?ci skip\\\\]\\"'</span>\\n</code></pre></div>","autoDesc":true}`);export{f as comp,I as data};
