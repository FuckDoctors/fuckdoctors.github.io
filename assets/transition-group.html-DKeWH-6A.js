import{_ as n,c as l,a,h as t,o as h,g as e}from"./app-4FyL7Bd-.js";const p={};function k(g,i){const s=e("Playground");return h(),l("div",null,[i[0]||(i[0]=a(`<h1 id="transitiongroup" tabindex="-1"><a class="header-anchor" href="#transitiongroup"><span>TransitionGroup</span></a></h1><p><code>&lt;TransitionGroup&gt;</code> 是一个内置组件，设计用于呈现一个列表中的元素或组件的插入、移除和顺序改变的动画效果。</p><h2 id="和-transition-的区别" tabindex="-1"><a class="header-anchor" href="#和-transition-的区别"><span>和 <code>&lt;Transition&gt;</code> 的区别</span></a></h2><p><code>&lt;TransitionGroup&gt;</code> 支持和 <code>&lt;Transition&gt;</code> 基本相同的 prop、CSS 过渡 class 和 JavaScript 钩子监听器，但有以下几点区别：</p><ul><li>默认情况下，它不会渲染一个包装器元素。但你可以通过传入 <code>tag</code> 属性来指定一个元素作为包装器元素来渲染。</li><li>过渡模式在这里不可用，因为我们不再是在互斥的元素之间进行切换。</li><li>其中的元素<strong>总是必须</strong>有一个独一无二的 <code>key</code> attribute。</li><li>CSS 过渡 class 会被应用在其中的<strong>每一个元素</strong>上，<strong>而不是</strong>这个组的容器上。</li></ul><h2 id="进入-离开过渡" tabindex="-1"><a class="header-anchor" href="#进入-离开过渡"><span>进入 / 离开过渡</span></a></h2><p>这里是 <code>&lt;TransitionGroup&gt;</code> 对一个 <code>v-for</code> 列表应用进入 / 离开过渡的示例：</p><div class="language-vue" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TransitionGroup</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;list&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ul&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;li v-for=&quot;item in list&quot; :key=&quot;item&quot;&gt;{{ item }}&lt;/li&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TransitionGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><div class="language-css" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.list-enter-active</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.list-leave-active</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  transition: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">all</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.5</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> ease</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.list-enter-from</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.list-leave-to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  opacity: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  transform: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">translateX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div>`,9)),t(s,{title:"%E7%AE%80%E5%8D%95%E5%88%97%E8%A1%A8%E8%BF%87%E6%B8%A1",link:"https%3A%2F%2Fsfc.vuejs.org%2F%23eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gJ3Z1ZSdcbmltcG9ydCB7IHNodWZmbGUgYXMgX3NodWZmbGUgfSBmcm9tICdsb2Rhc2gtZXMnXG5cbmNvbnN0IGdldEluaXRpYWxJdGVtcyA9ICgpID0%2BIFsxLCAyLCAzLCA0LCA1XVxuY29uc3QgaXRlbXMgPSByZWYoZ2V0SW5pdGlhbEl0ZW1zKCkpXG5sZXQgaWQgPSBpdGVtcy52YWx1ZS5sZW5ndGggKyAxXG5cbmZ1bmN0aW9uIGluc2VydCgpIHtcbiAgY29uc3QgaSA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIGl0ZW1zLnZhbHVlLmxlbmd0aClcbiAgaXRlbXMudmFsdWUuc3BsaWNlKGksIDAsIGlkKyspXG59XG5cbmZ1bmN0aW9uIHJlc2V0KCkge1xuICBpdGVtcy52YWx1ZSA9IGdldEluaXRpYWxJdGVtcygpXG59XG5cbmZ1bmN0aW9uIHNodWZmbGUoKSB7XG4gIGl0ZW1zLnZhbHVlID0gX3NodWZmbGUoaXRlbXMudmFsdWUpXG59XG5cbmZ1bmN0aW9uIHJlbW92ZShpdGVtKSB7XG4gIGNvbnN0IGkgPSBpdGVtcy52YWx1ZS5pbmRleE9mKGl0ZW0pXG4gIGlmIChpID4gLTEpIHtcbiAgICBpdGVtcy52YWx1ZS5zcGxpY2UoaSwgMSlcbiAgfVxufVxuPC9zY3JpcHQ%2BXG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cImFjdGlvbnNcIj5cbiAgICA8YnV0dG9uIEBjbGljaz1cImluc2VydFwiPumaj%2BacuuaPkuWFpTwvYnV0dG9uPlxuICAgIDxidXR0b24gQGNsaWNrPVwicmVzZXRcIj7ph43nva48L2J1dHRvbj5cbiAgICA8YnV0dG9uIEBjbGljaz1cInNodWZmbGVcIj7miZPkubE8L2J1dHRvbj5cbiAgPC9kaXY%2BXG5cbiAgPFRyYW5zaXRpb25Hcm91cCB0YWc9XCJ1bFwiIG5hbWU9XCJmYWRlXCIgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICA8bGkgdi1mb3I9XCJpdGVtIGluIGl0ZW1zXCIgOmtleT1cIml0ZW1cIiBjbGFzcz1cIml0ZW1cIj5cbiAgICAgIHt7IGl0ZW0gfX1cbiAgICAgIDxidXR0b24gY2xhc3M9XCJidG5cIiBAY2xpY2s9XCJyZW1vdmUoaXRlbSlcIj54PC9idXR0b24%2BXG4gICAgPC9saT5cbiAgPC9UcmFuc2l0aW9uR3JvdXA%2BXG48L3RlbXBsYXRlPlxuXG48c3R5bGUgc2NvcGVkPlxuLmNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogNXB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuLmNvbnRhaW5lciAuaXRlbSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGhlaWdodDogMzBweDtcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIHBhZGRpbmctbGVmdDogNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG4gIGJvcmRlcjogZ3JheSAxcHggZGFzaGVkO1xuICBiYWNrZ3JvdW5kOiAjZjNmM2YzO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuLmNvbnRhaW5lciAuaXRlbSAuYnRuIHtcbiAgbWFyZ2luLXRvcDogM3B4O1xuICBmbG9hdDogcmlnaHQ7XG59XG4uY29udGFpbmVyIC5pdGVtOjphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBjbGVhcjogYm90aDtcbn1cblxuLyog5a%2B556e75Yqo5Lit55qE5YWD57Sg5bqU55So55qE6L%2BH5rihICovXG4uZmFkZS1tb3ZlLCAvKiBhcHBseSB0cmFuc2l0aW9uIHRvIG1vdmluZyBlbGVtZW50cyAqL1xuLmZhZGUtZW50ZXItYWN0aXZlLFxuLmZhZGUtbGVhdmUtYWN0aXZlIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuNXMgY3ViaWMtYmV6aWVyKDAuNTUsIDAsIDAuMSwgMSk7XG59XG4uZmFkZS1lbnRlci1mcm9tLFxuLmZhZGUtbGVhdmUtdG8ge1xuICBvcGFjaXR5OiAwO1xuICB0cmFuc2Zvcm06IHNjYWxlWSgwLjAxKSB0cmFuc2xhdGUoMzBweCwgMCk7XG59XG4vKiDnoa7kv53lsIbnprvlvIDnmoTlhYPntKDku47luIPlsYDmtYHkuK3liKDpmaRcbiAg5Lul5L6%2F6IO95aSf5q2j56Gu5Zyw6K6h566X56e75Yqo55qE5Yqo55S744CCICovXG4uZmFkZS1sZWF2ZS1hY3RpdmUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG48L3N0eWxlPlxuIiwiaW1wb3J0LW1hcC5qc29uIjoie1xuICBcImltcG9ydHNcIjoge1xuICAgIFwidnVlXCI6IFwiaHR0cHM6Ly9zZmMudnVlanMub3JnL3Z1ZS5ydW50aW1lLmVzbS1icm93c2VyLmpzXCIsXG4gICAgXCJsb2Rhc2gtZXNcIjogXCJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xvZGFzaC1lc0A0LjE3LjIxL2xvZGFzaC5taW4uanNcIlxuICB9XG59In0%3D"}),i[1]||(i[1]=a(`<h2 id="交错的列表过渡" tabindex="-1"><a class="header-anchor" href="#交错的列表过渡"><span>交错的列表过渡</span></a></h2><p>如果通过 data attribute 用 JavaScript 来执行过渡时，那么我们也可以实现列表中的交错过渡。<br> 首先，我们把某一项的索引作为 DOM 元素上的一个 data attribute 呈现出来。</p><div class="language-vue" data-highlighter="shiki" data-ext="vue" data-title="vue" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TransitionGroup</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ul&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  :</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">css</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  @</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">before-enter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">onBeforeEnter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  @</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">enter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">onEnter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  @</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">leave</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">onLeave</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;!-- prettier-ignore-attribute --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;li v-for=&quot;(item, index) in computedList&quot; :key=&quot;item.msg&quot; :data-index=&quot;index&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {{ item.msg }}</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/li&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TransitionGroup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div><p>接着，在 JavaScript 钩子中，我们基于这个 data attribute 对该元素执行一个延迟动画：</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> onEnter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">done</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  gsap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    opacity</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    height</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;1.6em&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    delay</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">dataset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">index</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    onComplete</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> done</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div>`,5)),t(s,{title:"%E4%BA%A4%E9%94%99%E7%9A%84%E5%88%97%E8%A1%A8%E8%BF%87%E6%B8%A1",link:"https%3A%2F%2Fsfc.vuejs.org%2F%23eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IGNvbXB1dGVkLCByZWYgfSBmcm9tICd2dWUnXG5pbXBvcnQgZ3NhcCBmcm9tICdnc2FwJ1xuXG5jb25zdCBsaXN0ID0gW1xuICB7IG1zZzogJ0JydWNlIExlZScgfSxcbiAgeyBtc2c6ICdKYWNraWUgQ2hhbicgfSxcbiAgeyBtc2c6ICdDaHVjayBOb3JyaXMnIH0sXG4gIHsgbXNnOiAnSmV0IExpJyB9LFxuICB7IG1zZzogJ0t1bmcgRnVyeScgfSxcbl1cblxuY29uc3QgcXVlcnkgPSByZWYoJycpXG5cbmNvbnN0IGNvbXB1dGVkTGlzdCA9IGNvbXB1dGVkKCgpID0%2BIHtcbiAgcmV0dXJuIGxpc3QuZmlsdGVyKGl0ZW0gPT4gaXRlbS5tc2cudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhxdWVyeS52YWx1ZSkpXG59KVxuXG5mdW5jdGlvbiBvbkJlZm9yZUVudGVyKGVsKSB7XG4gIGVsLnN0eWxlLm9wYWNpdHkgPSAwXG4gIGVsLnN0eWxlLmhlaWdodCA9IDBcbn1cblxuZnVuY3Rpb24gb25FbnRlcihlbCwgZG9uZSkge1xuICBnc2FwLnRvKGVsLCB7XG4gICAgb3BhY2l0eTogMSxcbiAgICBoZWlnaHQ6ICcxLjZlbScsXG4gICAgZGVsYXk6IGVsLmRhdGFzZXQuaW5kZXggKiAwLjE1LFxuICAgIG9uQ29tcGxldGU6IGRvbmUsXG4gIH0pXG59XG5cbmZ1bmN0aW9uIG9uTGVhdmUoZWwsIGRvbmUpIHtcbiAgZ3NhcC50byhlbCwge1xuICAgIG9wYWNpdHk6IDAsXG4gICAgaGVpZ2h0OiAwLFxuICAgIGRlbGF5OiBlbC5kYXRhc2V0LmluZGV4ICogMC4xNSxcbiAgICBvbkNvbXBsZXRlOiBkb25lLFxuICB9KVxufVxuPC9zY3JpcHQ%2BXG5cbjx0ZW1wbGF0ZT5cbiAgPGlucHV0IHYtbW9kZWw9XCJxdWVyeVwiIC8%2BXG4gIDxUcmFuc2l0aW9uR3JvdXBcbiAgICB0YWc9XCJ1bFwiXG4gICAgOmNzcz1cImZhbHNlXCJcbiAgICBAYmVmb3JlLWVudGVyPVwib25CZWZvcmVFbnRlclwiXG4gICAgQGVudGVyPVwib25FbnRlclwiXG4gICAgQGxlYXZlPVwib25MZWF2ZVwiXG4gID5cbiAgICA8bGlcbiAgICAgIHYtZm9yPVwiKGl0ZW0sIGluZGV4KSBpbiBjb21wdXRlZExpc3RcIlxuICAgICAgOmtleT1cIml0ZW0ubXNnXCJcbiAgICAgIDpkYXRhLWluZGV4PVwiaW5kZXhcIlxuICAgID5cbiAgICAgIHt7IGl0ZW0ubXNnIH19XG4gICAgPC9saT5cbiAgPC9UcmFuc2l0aW9uR3JvdXA%2BXG48L3RlbXBsYXRlPlxuIiwiaW1wb3J0LW1hcC5qc29uIjoie1xuICBcImltcG9ydHNcIjoge1xuICAgIFwidnVlXCI6IFwiaHR0cHM6Ly9zZmMudnVlanMub3JnL3Z1ZS5ydW50aW1lLmVzbS1icm93c2VyLmpzXCIsXG4gICAgXCJnc2FwXCI6IFwiaHR0cHM6Ly91bnBrZy5jb20vZ3NhcD9tb2R1bGVcIlxuICB9XG59In0%3D"})])}const d=n(p,[["render",k],["__file","transition-group.html.vue"]]),r=JSON.parse('{"path":"/notes/frontend/vue/vue3/built-ins/transition-group.html","title":"TransitionGroup","lang":"zh-CN","frontmatter":{"order":20,"category":["笔记","frontend","vue"],"tag":["vue3"],"description":"TransitionGroup <TransitionGroup> 是一个内置组件，设计用于呈现一个列表中的元素或组件的插入、移除和顺序改变的动画效果。 和 <Transition> 的区别 <TransitionGroup> 支持和 <Transition> 基本相同的 prop、CSS 过渡 class 和 JavaScript 钩子监听器，但有以...","head":[["meta",{"property":"og:url","content":"https://www.zhaobc.site/notes/frontend/vue/vue3/built-ins/transition-group.html"}],["meta",{"property":"og:site_name","content":"赵斌的小站"}],["meta",{"property":"og:title","content":"TransitionGroup"}],["meta",{"property":"og:description","content":"TransitionGroup <TransitionGroup> 是一个内置组件，设计用于呈现一个列表中的元素或组件的插入、移除和顺序改变的动画效果。 和 <Transition> 的区别 <TransitionGroup> 支持和 <Transition> 基本相同的 prop、CSS 过渡 class 和 JavaScript 钩子监听器，但有以..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-08T03:57:26.000Z"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:modified_time","content":"2024-08-08T03:57:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TransitionGroup\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-08T03:57:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhao Bin\\",\\"url\\":\\"zhaobc.site\\",\\"email\\":\\"hi@zhaobc.site\\"}]}"],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://www.zhaobc.site/rss.xml","title":"赵斌的小站 RSS Feed"}]]},"headers":[{"level":2,"title":"和 <Transition> 的区别","slug":"和-transition-的区别","link":"#和-transition-的区别","children":[]},{"level":2,"title":"进入 / 离开过渡","slug":"进入-离开过渡","link":"#进入-离开过渡","children":[]},{"level":2,"title":"交错的列表过渡","slug":"交错的列表过渡","link":"#交错的列表过渡","children":[]}],"git":{"createdTime":1652680355000,"updatedTime":1723089446000,"contributors":[{"name":"Zhao Bin","username":"Zhao Bin","email":"413853119@qq.com","commits":7,"url":"https://github.com/Zhao Bin"},{"name":"FuckDoctors","username":"FuckDoctors","email":"413853119@qq.com","commits":1,"url":"https://github.com/FuckDoctors"}]},"readingTime":{"minutes":2.75,"words":825},"filePathRelative":"notes/frontend/vue/vue3/built-ins/transition-group.md","localizedDate":"2022年5月16日","excerpt":"\\n<p><code>&lt;TransitionGroup&gt;</code> 是一个内置组件，设计用于呈现一个列表中的元素或组件的插入、移除和顺序改变的动画效果。</p>\\n<h2>和 <code>&lt;Transition&gt;</code> 的区别</h2>\\n<p><code>&lt;TransitionGroup&gt;</code> 支持和 <code>&lt;Transition&gt;</code> 基本相同的 prop、CSS 过渡 class 和 JavaScript 钩子监听器，但有以下几点区别：</p>\\n<ul>\\n<li>默认情况下，它不会渲染一个包装器元素。但你可以通过传入 <code>tag</code> 属性来指定一个元素作为包装器元素来渲染。</li>\\n<li>过渡模式在这里不可用，因为我们不再是在互斥的元素之间进行切换。</li>\\n<li>其中的元素<strong>总是必须</strong>有一个独一无二的 <code>key</code> attribute。</li>\\n<li>CSS 过渡 class 会被应用在其中的<strong>每一个元素</strong>上，<strong>而不是</strong>这个组的容器上。</li>\\n</ul>","autoDesc":true}');export{d as comp,r as data};
